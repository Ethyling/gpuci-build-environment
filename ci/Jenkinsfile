pipeline {
  agent {
    node {
      label 'runner'
    }
  }
  stages {
    stage('env check') {
      steps {
        sh 'env'
      }
    }
    parallel {
      stage('miniconda-cuda Test Build') {
        steps {
          build(
            job: 'gpuci/gpuci-build-environment/miniconda-cuda-test-build',
            wait: true,
            propagate: true,
            parameters: [
              string(name: 'PR_ID', value: env.CHANGE_ID),
              string(name: 'REPORT_HASH', value: env.GIT_COMMIT),
              string(name: 'COMMIT_HASH', value: env.GIT_COMMIT),
              string(name: 'SOURCE_BRANCH', value: env.CHANGE_BRANCH),
              string(name: 'TARGET_BRANCH', value: env.CHANGE_TARGET)
            ]
          )
        }
      }
      stage('miniforge-cuda Test Build') {
        steps {
          build(
            job: 'gpuci/gpuci-build-environment/miniforge-cuda-test-build',
            wait: true,
            propagate: true,
            parameters: [
              string(name: 'PR_ID', value: env.CHANGE_ID),
              string(name: 'REPORT_HASH', value: env.GIT_COMMIT),
              string(name: 'COMMIT_HASH', value: env.GIT_COMMIT),
              string(name: 'SOURCE_BRANCH', value: env.CHANGE_BRANCH),
              string(name: 'TARGET_BRANCH', value: env.CHANGE_TARGET)
            ]
          )
        }
      }
    }
  }
}
